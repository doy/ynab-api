/*
 * YNAB API Endpoints
 *
 * Our API uses a REST based design, leverages the JSON data format, and relies upon HTTPS for transport. We respond with meaningful HTTP response codes and if an error occurs, we include error details in the response body.  API Documentation is at https://api.ynab.com
 *
 * The version of the OpenAPI document: 1.72.0
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Payee {
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "name")]
    pub name: String,
    /// If a transfer payee, the `account_id` to which this payee transfers to
    #[serde(rename = "transfer_account_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub transfer_account_id: Option<Option<String>>,
    /// Whether or not the payee has been deleted.  Deleted payees will only be included in delta requests.
    #[serde(rename = "deleted")]
    pub deleted: bool,
}

impl Payee {
    pub fn new(id: uuid::Uuid, name: String, deleted: bool) -> Payee {
        Payee {
            id,
            name,
            transfer_account_id: None,
            deleted,
        }
    }
}

